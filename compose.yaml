services:
  consumer:
    build:
      context: ./
      target: dev
    environment:
      KAFKA_BROKERS: kafka:9093
    develop:
      watch:
        - path: ./app/yarn.lock
          action: rebuild
        - path: ./app/src
          action: sync
          target: /usr/local/app/src

  kafka:
    image: apache/kafka-native
    ports:
      - "9092:9092"
    environment:
      # Auto create topics on first use
      KAFKA_AUTO_CREATE_TOPICS_ENABLE: 'true'

      # Configure listeners for both docker and host communication
      KAFKA_LISTENERS: CONTROLLER://localhost:9091,HOST://0.0.0.0:9092,DOCKER://0.0.0.0:9093
      KAFKA_ADVERTISED_LISTENERS: HOST://localhost:9092,DOCKER://kafka:9093
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: CONTROLLER:PLAINTEXT,DOCKER:PLAINTEXT,HOST:PLAINTEXT

      # Settings required for KRaft mode
      KAFKA_NODE_ID: 1
      KAFKA_PROCESS_ROLES: broker,controller
      KAFKA_CONTROLLER_LISTENER_NAMES: CONTROLLER
      KAFKA_CONTROLLER_QUORUM_VOTERS: 1@localhost:9091

      # Listener to use for broker-to-broker communication
      KAFKA_INTER_BROKER_LISTENER_NAME: DOCKER

      # Required for a single node cluster
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1

  kafka-ui:
    image: ghcr.io/kafbat/kafka-ui:latest
    ports:
      - 8080:8080
    environment:
      DYNAMIC_CONFIG_ENABLED: 'true'
      KAFKA_CLUSTERS_0_NAME: local
      KAFKA_CLUSTERS_0_BOOTSTRAPSERVERS: kafka:9093
    depends_on:
      - kafka

  publisher-1:
    image: node:lts
    working_dir: /usr/local/app
    command: bash -c "yarn install && yarn dev"
    volumes:
      - ./dev/publisher:/usr/local/app
    environment:
      KAFKA_BROKERS: kafka:9093
      PUBLISHER_NAME: publisher_one
      KAFKA_TOPIC: demo

  publisher-2:
    image: node:lts
    working_dir: /usr/local/app
    command: bash -c "yarn install && yarn dev"
    volumes:
      - ./dev/publisher:/usr/local/app
    environment:
      KAFKA_BROKERS: kafka:9093
      PUBLISHER_NAME: publisher_two
      KAFKA_TOPIC: second
